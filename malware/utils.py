#! -*- coding: utf-8 -*-
import logging
import hashlib
import binascii

import magic
import ssdeep


logger = logging.getLogger(__name__)


def compute_hashes(buf):
    """ Compute hashes

    >>> compute_hashes('HelloWorld')
    """
    algorithms = ('md5', 'sha1', 'sha256', 'sha512')
    hashes = dict()
    for a in algorithms:
        hashes[a] = getattr(hashlib, a)(buf).hexdigest()
    return hashes


def compute_ssdeep(buf):
    """ Compute ssdeep

    >>> compute_ssdeep('HelloWorld')
    """
    return ssdeep.hash(buf)


def get_uploaded_file_info(fp):
    """ Get information of Django InMemoryUploadedFile
    """
    file_info = dict()
    try:
        buf = fp.read()
    except Exception as e:
        logger.debug(e)
        raise
    else:
        file_info.update(compute_hashes(buf))
        file_info.update({
            'size': getattr(fp, 'size', None),
            'type': magic.from_buffer(buf),
            'crc32': binascii.crc32(buf),
            'ssdeep': compute_ssdeep(buf),
        })
        return file_info
