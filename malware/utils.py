#! -*- coding: utf-8 -*-
import hashlib
import binascii

import magic
import ssdeep


def compute_hashes(fp):
    argos = ('md5', 'sha1', 'sha256', 'sha512')
    hashes = {}
    try:
        buff = fp.read()
    except AttributeError:
        pass
    else:
        for argo in argos:
            hashes[argo] = getattr(hashlib, argo)(buff).hexdigest()
        return hashes


def compute_ssdeep(fp):
    try:
        buff = fp.read()
    except AttributeError:
        pass
    else:
        return ssdeep.hash(buff)


def gather_basic_fileinfo(fp):
    try:
        buff = fp.read()
    except AttributeError:
        pass
    else:
        return {
            'size': fp.size,
            'type': magic.from_buffer(buff),
            'crc32': binascii.crc32(buff)
        }

